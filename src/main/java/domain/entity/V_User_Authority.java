package domain.entity;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;
import util.common.StringUtility;

/**
 * JPA entity (view: v_user_authority)<br>
 * <p>
 *  The getter, setter, equals, and hashCode methods are automatically 
 *  generated by lombok at compile.
 * <p>
 *  * Since JPA needs to specify a unique key in Id annotation, this 
 *    application adds a field definition that makes the unique value to 
 *    the  view, and uses it as a substitute for the unique key.
 *    It is necessary to investigate separately whether such usage is 
 *    acceptable or not.
 */
@Entity @Table(name = "v_user_authority")
@Accessors(chain = true) @Getter @Setter @EqualsAndHashCode
public class V_User_Authority implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	@Id @Column(name = "id", nullable = false)
	private String id;
	
	@Column(name = "userid", length = 10)
	private String userid;
	
	@Column(name = "authorityname", length = 40)
	private String authorityname;
	
	@Override
	public String toString() {
		return StringUtility.toStringForBeans(this);
	}
	
}
