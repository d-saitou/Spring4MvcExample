NotEmpty = \u5fc5\u9808\u306e\u9805\u76ee\u3067\u3059\u3002
NotNull  = \u5fc5\u9808\u306e\u9805\u76ee\u3067\u3059\u3002
Min      = {1}\u4ee5\u4e0a\u306e\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
Max      = {1}\u4ee5\u4e0b\u306e\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
Size     = {2}\uff5e{1}\u6587\u5b57\u306e\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
Future   = \u672a\u6765\u306e\u65e5\u4ed8\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
Past     = \u904e\u53bb\u306e\u65e5\u4ed8\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002

typeMismatch.java.lang.Integer = \u6574\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
typeMismatch.java.util.Date    = \u65e5\u4ed8\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u4f8b\uff1a2017/01/01)
typeMismatch                   = \u7121\u52b9\u306a\u5165\u529b\u3067\u3059\u3002

# \u72ec\u81ea\u5b9a\u7fa9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u7528
model.validation.annotation.DateFormatCheckForString.message = \u6b63\u3057\u3044\u5f62\u5f0f\u3067\u65e5\u4ed8\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u4f8b\uff1a2017/01/01 \u307e\u305f\u306f 01/01/2017)

# Hibernate\u6a19\u6e96\u30e1\u30c3\u30bb\u30fc\u30b8 (ValidationMessages.properties)
# 
#javax.validation.constraints.AssertFalse.message = must be false
#javax.validation.constraints.AssertTrue.message  = must be true
#javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
#javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
#javax.validation.constraints.Future.message      = must be in the future
#javax.validation.constraints.Max.message         = must be less than or equal to {value}
#javax.validation.constraints.Min.message         = must be greater than or equal to {value}
#javax.validation.constraints.NotNull.message     = may not be null
#javax.validation.constraints.Null.message        = must be null
#javax.validation.constraints.Past.message        = must be in the past
#javax.validation.constraints.Pattern.message     = must match "{regexp}"
#javax.validation.constraints.Size.message        = size must be between {min} and {max}
#
#org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
#org.hibernate.validator.constraints.EAN.message                     = invalid {type} barcode
#org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
#org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
#org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
#org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
#org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
#org.hibernate.validator.constraints.NotBlank.message                = may not be empty
#org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
#org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
#org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
#org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
#org.hibernate.validator.constraints.URL.message                     = must be a valid URL
#
#org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
#org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
#org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number
