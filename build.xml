<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<project name="Spring4MvcExample" basedir="." default="all-for-production" xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<property name="project" value="Spring4MvcExample"/>
	
	<!-- Sources path property -->
	<property name="src.dir" value="src/main/java"/>
	<property name="resources.dir" value="src/main/resources"/>
	<property name="app.dir" value="src/main/webapp"/>
	<property name="build.dir" value="target/classes"/>
	<property name="lib.dir" value="target/lib"/>
	<property name="production.resources.dir" value="src/production/resources"/>
	<property name="production.webxml" value="src/production/webapp/WEB-INF/web.xml"/>
	
	<!-- Target path property -->
	<property name="target.app.dir" value="target/${project}"/>
	<property name="target.war.file" value="target/${project}.war"/>
	<property name="target.classes.dir" value="${target.app.dir}/WEB-INF/classes"/>
	<property name="target.lib.dir" value="${target.app.dir}/WEB-INF/lib"/>
	
	<!-- Build property -->
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="compiler.target" value="1.8"/>
	<property name="compiler.source" value="1.8"/>
	
	<!-- Classpath -->
	<path id="lib.path.files">
		<fileset dir="${lib.dir}"/>
	</path>
	<path id="classpath.files">
		<pathelement location="${build.dir}"/>
		<path refid="lib.path.files"/>
	</path>
	
	<!-- 
	  - target
	  -  name: init
	  -  depends: -
	  -  description: Initialize source project.
	  -->
	<target name="init" description="Initialize source project.">
		<delete dir="${build.dir}"/>
		<copy includeemptydirs="false" todir="${build.dir}" overwrite="yes">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${build.dir}" overwrite="yes">
			<fileset dir="${resources.dir}">
				<exclude name="**/*.java"/>
				<!-- <exclude name="**"/> -->
			</fileset>
		</copy>
	</target>
	
	<!-- 
	  - target
	  -  name: clean
	  -  depends: -
	  -  description: Clean up source project.
	  -->
	<target name="clean" description="Clean up source project.">
		<delete includeemptydirs="true">
			<fileset dir="target" defaultexcludes="false">
				<exclude name="**/m2e-wtp/**" />
			</fileset>
		</delete>
		<!-- Copy resources to target directory -->
		<antcall target="init"/>
	</target>
	
	<!-- 
	  - target
	  -  name: resolve-for-build
	  -  depends: -
	  -  description: Resolve library dependencies for compile.
	  -->
	<target name="resolve-for-build" description="Resolve library dependencies for compile.">
		<delete dir="${lib.dir}"/>
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
	</target>
	
	<!-- 
	  - target
	  -  name: resolve-for-package
	  -  depends: -
	  -  description: Resolve library dependencies for packaging.
	  -->
	<target name="resolve-for-package" description="Resolve library dependencies for packaging.">
		<ivy:retrieve pattern="${target.lib.dir}/[artifact]-[revision].[ext]" conf="runtime"/>
	</target>
	
	<!-- 
	  - target
	  -  name: build
	  -  depends: resolve-for-build
	  -  description: Compile the source file.
	  -->
	<target name="build" depends="resolve-for-build" description="Compile the source file.">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac
			debug="true" debuglevel="${debuglevel}" includeantruntime="false" 
			destdir="${build.dir}" source="${compiler.source}" target="${compiler.target}">
			<src path="${src.dir}"/>
			<!-- <src path="src/main/resources"/> -->
			<!-- <exclude name="**"/> -->
			<classpath refid="classpath.files"/>
		</javac>
	</target>
	
	<!-- 
	  - target
	  -  name: prepare-package
	  -  depends: -
	  -  description: Prepare the files of the web application.
	  -->
	<target name="prepare-package" description="Prepare the files of the web application.">
		<copy todir="${target.app.dir}" overwrite="yes">
			<fileset dir="${app.dir}"/>
		</copy>
		<copy todir="${target.classes.dir}" overwrite="yes">
			<fileset dir="${build.dir}"/>
		</copy>
		<antcall target="resolve-for-package"/>
	</target>
	
	<!-- 
	  - target
	  -  name: package-for-development
	  -  depends: prepare-package
	  -  description: Create war file for development environment
	  -->
	<target name="package-for-development" depends="prepare-package" description="Create war file for development environment.">
		<!--
		<war destfile="${target.war.file}" webxml="${app.dir}/WEB-INF/web.xml">
			<fileset dir="${target.app.dir}"/>
			<classes dir="${build.dir}"/>
		</war>
		-->
		<war destfile="${target.war.file}">
			<fileset dir="${target.app.dir}"/>
		</war>
	</target>
	
	<!-- 
	  - target
	  -  name: package-for-production
	  -  depends: prepare-package
	  -  description: Create war file for production environment.
	  -->
	<target name="package-for-production" depends="prepare-package" description="Create war file for production environment.">
		<copy todir="${target.classes.dir}" overwrite="yes">
			<fileset dir="${production.resources.dir}"/>
		</copy>
		<!--
		<war destfile="${target.war.file}" webxml="${production.webxml}">
			<fileset dir="${target.app.dir}"/>
			<classes dir="${build.dir}"/>
		</war>
		-->
		<copy file="${production.webxml}" tofile="${target.app.dir}/WEB-INF/web.xml" overwrite="yes"/>
		<war destfile="${target.war.file}">
			<fileset dir="${target.app.dir}"/>
		</war>
	</target>
	
	<!-- 
	  - target
	  -  name: all-for-development
	  -  depends: clean,build,package-for-development
	  -  description: Execute all tasks for development environment.
	  -->
	<target name="all-for-development" depends="clean,build,package-for-development"
		description="Execute all tasks for development environment."/>
	
	<!-- 
	  - target
	  -  name: all-for-production
	  -  depends: clean,build,package-for-production
	  -  description: Execute all tasks for production environment.
	  -->
	<target name="all-for-production" depends="clean,build,package-for-production"
		description="Execute all tasks for production environment."/>
	
</project>
